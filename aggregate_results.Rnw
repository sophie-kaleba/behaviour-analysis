<<knitr-load, echo=FALSE, include=FALSE>>=
if (Sys.getenv("RSTUDIO") == "1") {
    setwd("/home/sopi/Documents/Side_projects/behaviour-analysis/")
} else {
   opts_chunk$set(
    fig.path="./figure/",
    fig.keep='all',
    dev=c('tikz'), #dev='pdf',c('tikz', 'svg'),
    dev.args=list(pointsize=8, timestamp = FALSE),
    echo=FALSE,
    external=FALSE,
    tidy=FALSE)

  ## Make sure that TikZDevice is used for measuring size of latex labels
  options(device = function(...) tikzDevice::tikz(tempfile(), ...))
}

source("./scripts/libraries.R", chdir=TRUE)

data <- load_all_data("/home/sopi/Documents/Side_projects/behaviour-analysis/results/parsed_files/16march/methods/", FALSE)

# Table summarizing the amount of call sites being mono, poly, mega
total_w_splitting <- add_number_receivers(data, c(Call.Site.Target, "Benchmark"))
num_target_observed_w_splitting <- compute_num_target_details(total_w_splitting, Call.Site.Target,  "Observed.Receiver")

cache_status_sites <- create_aggregate_table(num_target_observed_w_splitting, c("Benchmark", "Num.Receiver", "Num.Call.Sites"),"Num.Receiver", "Num.Call.Sites")
cache_status_calls <- head(create_aggregate_table(num_target_observed_w_splitting, c("Benchmark", "Num.Receiver", "Frequency"),"Num.Receiver", "Frequency"), -1)

total_w_splitting <- add_lookup_status_per_call(total_w_splitting)

################################################## Splitting
summary_splitting <- generate_splitting_summary(total_w_splitting, c(Call.Site.Target, "Call.ID", "Observed.Receiver")) %>%
  dplyr::arrange(desc(Frequency)) %>%
  tibble::rowid_to_column(var="Rank")

num_calls_splitted <- total_w_splitting %>%
  group_by_at(c(Call.Site, "Benchmark")) %>%
  dplyr::mutate(Times.Splitted = n_distinct(CT.Address) - 1) %>%
  filter(Times.Splitted > 0)

Num.Splitted.Call.Sites <- count_things(num_calls_splitted, c(Call.Site, "Benchmark"))

transition_data <- analyse_splitting_transitions(total_w_splitting, "all")

# TODO - need it by benchmark - Number.Splits <- nrow(transition_data)
splitting_transition_summary_sites <- summarise_transition_sites(transition_data) %>% replace(is.na(.), 0) %>% janitor::adorn_totals("row")  
# get frequency according to number of splits
#splitting_transition_summary_frequency <- summarise_transition_frequency(transition_data, Number.Splits)